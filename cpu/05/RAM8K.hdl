// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/RAM8K.hdl

/**
 * Memory of 8K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8K {
    IN in[16], load, address[13];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux(in=load, sel=address[12], a=l0, b=l1);
    RAM4K(in=in, load=l0, address=address[0..11], out=o0);
    RAM4K(in=in, load=l1, address=address[0..11], out=o1);
    Mux16(a=o0, b=o1, sel=address[12], out=out);
}
